// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$Crypto from "../src/Crypto.res.mjs";

var passed = {
  contents: 0
};

var failed = {
  contents: 0
};

function assertTrue(name, condition) {
  if (condition) {
    console.log("✅ " + name);
    passed.contents = passed.contents + 1 | 0;
  } else {
    console.log("❌ " + name);
    failed.contents = failed.contents + 1 | 0;
  }
}

console.log("MessageEncryption.res");

function testEncryptionDecryption() {
  var message = "Hello, World!";
  var key = "12345678901234567890123456789012";
  var iv = "1234567890123456";
  var encrypted = $$Crypto.encryptAes(key, iv, message);
  if (encrypted.TAG !== "Ok") {
    return assertTrue("Encryption should not fail", false);
  }
  var encrypted$1 = encrypted._0;
  assertTrue("Encryption: result not empty", encrypted$1 !== "");
  var decrypted = $$Crypto.decryptAes(key, iv, encrypted$1);
  if (decrypted.TAG === "Ok") {
    return assertTrue("Decryption: matches original", decrypted._0 === message);
  } else {
    return assertTrue("Decryption should not fail", false);
  }
}

testEncryptionDecryption();

console.log("Tests completed: " + String(passed.contents + failed.contents | 0) + " total, " + String(passed.contents) + " passed, " + String(failed.contents) + " failed\n");

export {
  passed ,
  failed ,
  assertTrue ,
  testEncryptionDecryption ,
}
/*  Not a pure module */
