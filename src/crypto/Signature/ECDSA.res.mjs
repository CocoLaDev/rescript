// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as $$Crypto from "crypto";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";

function signData(data, privateKey) {
  try {
    return {
            TAG: "Ok",
            _0: $$Crypto.sign("SHA256", data, {
                  key: privateKey,
                  dsaEncoding: "der"
                })
          };
  }
  catch (raw_obj){
    var obj = Caml_js_exceptions.internalToOCamlException(raw_obj);
    if (obj.RE_EXN_ID === Js_exn.$$Error) {
      var msg = obj._1.message;
      if (msg !== undefined) {
        return {
                TAG: "Error",
                _0: {
                  TAG: "Error",
                  _0: msg
                }
              };
      } else {
        return {
                TAG: "Error",
                _0: {
                  TAG: "Error",
                  _0: "Unknown signature error"
                }
              };
      }
    }
    throw obj;
  }
}

function verifySignature(data, signature, publicKey) {
  try {
    return {
            TAG: "Ok",
            _0: $$Crypto.verify("SHA256", data, {
                  key: publicKey,
                  dsaEncoding: "der"
                }, signature)
          };
  }
  catch (raw_obj){
    var obj = Caml_js_exceptions.internalToOCamlException(raw_obj);
    if (obj.RE_EXN_ID === Js_exn.$$Error) {
      var msg = obj._1.message;
      if (msg !== undefined) {
        return {
                TAG: "Error",
                _0: {
                  TAG: "Error",
                  _0: msg
                }
              };
      } else {
        return {
                TAG: "Error",
                _0: {
                  TAG: "Error",
                  _0: "Unknown signature error"
                }
              };
      }
    }
    throw obj;
  }
}

export {
  signData ,
  verifySignature ,
}
/* crypto Not a pure module */
